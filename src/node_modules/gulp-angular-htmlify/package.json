{
  "name": "gulp-angular-htmlify",
  "description": "Change your ng-attributes to data-ng-attributes for HTML5 validation",
  "version": "0.4.0",
  "engines": {
    "node": ">=0.10.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pgilad/gulp-angular-htmlify"
  },
  "homepage": "https://github.com/pgilad/gulp-angular-htmlify",
  "bugs": {
    "url": "https://github.com/pgilad/gulp-angular-htmlify/issues"
  },
  "main": "index.js",
  "files": [
    "index.js",
    "license.md"
  ],
  "scripts": {
    "watchTest": "mocha -R spec -w ./tests/*.js",
    "test": "mocha -R spec ./tests/*.js"
  },
  "keywords": [
    "gulpplugin",
    "gulp",
    "angular",
    "w3c",
    "validator",
    "html5",
    "data-ng",
    "ng"
  ],
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "*"
  },
  "dependencies": {
    "angular-html5": "^0.2.0",
    "gulp-util": "^3.0.1",
    "through2": "^0.6.2"
  },
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-angular-htmlify\n\n> Change your ng-attributes to data-ng-attributes for HTML5 validation\n\n[![NPM Version](http://img.shields.io/npm/v/gulp-angular-htmlify.svg?style=flat)](https://npmjs.org/package/gulp-angular-htmlify)\n[![NPM Downloads](http://img.shields.io/npm/dm/gulp-angular-htmlify.svg?style=flat)](https://npmjs.org/package/gulp-angular-htmlify)\n[![Build Status](http://img.shields.io/travis/pgilad/gulp-angular-htmlify.svg?style=flat)](https://travis-ci.org/pgilad/gulp-angular-htmlify)\n\nEver tried to run an Angular HTML page into w3c validator? Yeah it's a mess.\n\nThe solution everyone recommends is to add `data` to all your `ng` directives.\nNow with `gulp` this can be easily made part of your build flow, similar to how\nng-min is to creating minifiable Angular syntax.\n\n**Turn this:**\n```html\n<html ng-app=\"myApp\">\n...\n<body ng-controller=\"MainCtrl\">\n</body>\n</html>\n```\n\n**Into this:**\n```html\n<html data-ng-app=\"myApp\">\n...\n<body data-ng-controller=\"MainCtrl\">\n</body>\n</html>\n```\n#### <img src=\"http://www.w3.org/html/logo/downloads/HTML5_Logo_256.png\" alt=\"HTML5 Valid\" width=\"64\" height=\"64\"/>\n\n**gulp-angular-htmlify** looks for `ng-` directives by default and can handle the following cases:\n```html\n<!-- attribute -->\n<ANY ng-directive>\n<!-- regular element -->\n<ng-directive></ng-directive>\n<!-- self closing element -->\n<ng-directive />\n<!-- custom directive prefix -->\n<ui-router></ui-router>\n<!-- your name prefix -->\n<gilad-cool-loader></gilad-cool-loader>\n```\n\nYou can add additional prefixes using the option `customPrefixes`.\n\nThis plugin plays nice with `type=\"text/ng-template\"` and won't break it.\n\n*Issues with the output should be reported on the [angular-html5 issue tracker](https://github.com/pgilad/angular-html5/issues).*\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/gulp-angular-htmlify)\n\n```\nnpm install --save-dev gulp-angular-htmlify\n```\n\n## Example\n\n```js\nvar gulp = require('gulp');\nvar htmlify = require('gulp-angular-htmlify');\n\n//simple usage\ngulp.task('htmlify', function() {\n    gulp.src('public/**/*.html')\n        .pipe(htmlify())\n        .pipe(gulp.dest('build/'));\n});\n\n//using jade as a pre-processer\ngulp.task('htmlify', function() {\n    gulp.src('partials/**/*.jade')\n        .pipe(jade())\n        .pipe(htmlify())\n        .pipe(gulp.dest('build/'));\n});\n\n//Also transforming ui-attributes to data-ui-attributes\ngulp.task('htmlify', function() {\n    gulp.src('public/**/*.html')\n        .pipe(htmlify({\n            customPrefixes: ['ui-']\n        }))\n        .pipe(gulp.dest('build/'));\n});\n```\n\n## API\n\n### htmlify(params)\n\n`params` is an object that contains the following settings:\n\n#### customPrefixes\n\nType: `Array`\n\nDefault: `[]`\n\nAn array to optionally add custom prefixes to the list of converted directives.\n\nFor example: `['ui-', 'gijo-']`\n\nBy default only `ng-` prefixes are are handled. Any items you add here will be handled as well.\n\n*Note: for this to work - you will need to make sure your directives can load with a `data-` prefix.*\n\n#### verbose\n\nType: `Boolean`\n\nDefault: `false`\n\nWhether to log files that had ng-directives detected and replaced. (Useful for debugging).\n\nExample usage:\n```js\n//...\n.pipe(htmlify({\n    verbose:true,\n    customPrefixes: ['ui-']\n    }))\n// --> [gulp] Found and replaced ng-directives in index.html\n//...\n```\n\n## License\n\nMIT Â©2014 **Gilad Peleg**\n",
  "readmeFilename": "readme.md",
  "_id": "gulp-angular-htmlify@0.4.0",
  "dist": {
    "shasum": "e993a6c5b37905c38a6e3fd5bdabaf6c4103e33c"
  },
  "_from": "gulp-angular-htmlify@^0.4.0",
  "_resolved": "https://registry.npmjs.org/gulp-angular-htmlify/-/gulp-angular-htmlify-0.4.0.tgz"
}
